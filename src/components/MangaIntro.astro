---
import { getManga } from "../data/manga";
import { siteConfig } from "../data/site-config";
import { Image } from "astro:assets";
import introImage from "../assets/intro-cover.webp";

const manga = getManga();

const introInfo = [
  {
    label: "Status",
    description: siteConfig.status,
  },
  {
    label: "Chapters",
    description: manga.chapters.length,
  },
  {
    label: "Author",
    description: siteConfig.author,
  },
];
---

<section class="bg-gray-800 rounded-lg p-6 mb-12" aria-labelledby="manga-title">
  <div class="flex flex-col md:flex-row gap-8">
    <div class="w-full md:w-1/3 lg:w-1/4">
      <div class="relative aspect-[2/3] rounded-lg overflow-hidden">
        <div
          class="absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse"
        >
        </div>
        <Image
          src={introImage}
          alt={`Cover image for ${manga.title} manga`}
          width={600}
          height={900}
          class="relative z-10 w-full h-full object-cover"
          loading="eager"
          decoding="async"
        />
      </div>
    </div>

    <div class="flex-1">
      <header>
        <h1 id="manga-title" class="text-2xl font-bold mb-4">
          About {manga.title}
        </h1>
      </header>

      <div class="prose dark:prose-invert max-w-none">
        <p class="mb-4 text-lg">{manga.description}</p>

        <div class="flex flex-wrap gap-4 mt-6">
          {
            introInfo.map((info) => (
              <div class="bg-gray-700 px-4 py-2 rounded-lg">
                <span class="block text-sm ">{info.label}</span>
                <span class="font-semibold text-gray-50">
                  {info.description}
                </span>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Optimize CLS by maintaining aspect ratio */
  .aspect-\[2\/3\] {
    aspect-ratio: 2/3;
  }

  /* Ensure smooth animation for loading state */
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  /* Improve performance with GPU acceleration */
  .relative {
    transform: translateZ(0);
    will-change: transform;
  }
</style>
